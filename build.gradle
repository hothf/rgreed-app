buildscript {

    ext {

        project_version_code = 4
        project_version_name = '1.0.3'

        min_version = 21
        target_version = 28

        koin_version = '1.0.1'
        ktx_version = '1.0.2'
        ktx_core_version = '1.0.1'
        kotlin_version = '1.3.41'
        lifecycle_version = '2.0.0'
        constraint_version = '2.0.0-alpha3'
        material_version = '1.1.0-alpha02'
        junit_version = '1.1.0'
        testrunner_version = '1.1.0-beta02'
        espresso_version = '3.1.0-beta02'
        navigation_version = '1.0.0-rc02'
        androidx_version = '3.2.0-alpha16'
        timber_version = '4.7.1'

        rv_animations_version = '3.0.0'

        rx_java_version = '2.2.5'
        rx_android_version = '2.1.0'
        rx_kotlin_version = '2.3.0'

        retrofit_version = '2.5.0'
        okhttp_version = '3.12.1'
        urlconnection_version = '3.11.0'

        google_services_version = '4.2.0'

        firebase_core_version = '16.0.7'
        firebase_message_version = '17.4.0'

        objectbox_version = '2.3.1'
    }

    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "io.objectbox:objectbox-gradle-plugin:$objectbox_version"
        classpath "com.google.gms:google-services:$google_services_version"
    }
}

plugins {
    id "io.gitlab.arturbosch.detekt" version "1.0.0.RC7" // usage: $./gradlew detektCheck
    id "org.jetbrains.dokka" version "0.9.17" // usage: $./gradlew dokka
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

detekt { // linting / analyzing kotlin code
    version = "1.0.0.RC7"
    profile("main") {
        input = "$projectDir/app/src/main/java"
        output = "$project.rootDir/detekt/output.xml"
        config = "$projectDir/detekt.yml"
        filters = ".*test.*,.*/resources/.*,.*/tmp/.*"
    }
}

dokka { // kotlin documentation
    outputFormat = 'javadoc'
    outputDirectory = "$projectDir/documentation"
    sourceDirs = files("$projectDir/app/src/main/java")
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
